<button class="current_location mb-3 mt-3">現在地から近い順に表示する</button>

<script>
  document.addEventListener('turbo:load', function() {
    class CurrentLocations {
      constructor() {
        this.getCurrentLocation();
      }

      getCurrentLocation() {
        document.querySelectorAll('.current_location').forEach(element => {
          element.addEventListener('click', () => {
            const latitude = sessionStorage.getItem('latitude');
            const longitude = sessionStorage.getItem('longitude');

            if (latitude && longitude) {
              window.location.href = `<%= url %>?latitude=${latitude}&longitude=${longitude}`;
            } else if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(this.successGetPosition.bind(this), this.failGetPosition.bind(this), this.options);
            } else {
              const message = 'ご使用中のブラウザは現在地検索に対応されておりません。';
              Alert.set('warning', message);
            }
          });
        });
      }

      successGetPosition(position) {
        // Railsのエンドポイントに位置情報を送信
        fetch('/save_location', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
          },
          body: JSON.stringify({
            latitude: position.coords.latitude,
            longitude: position.coords.longitude
          })
        }).then(response => {
          if (response.ok) {
            window.location.href = `<%= url %>?latitude=${position.coords.latitude}&longitude=${position.coords.longitude}`;
          } else {
            Alert.set('warning', '位置情報の保存に失敗しました。');
          }
        });
      }

      failGetPosition(error) {
        let message;
        switch (error.code) {
          case error.PERMISSION_DENIED:
            message = '位置情報の提供を許可してください。';
            break;
          case error.POSITION_UNAVAILABLE:
            message = '位置情報の取得に失敗しました。';
            break;
          default:
            message = '位置情報の取得中にエラーが発生しました。';
            break;
        }
        Alert.set('warning', message);
      }

      get options() {
        return {
          enableHighAccuracy: true
        };
      }
    }

    new CurrentLocations();
  });
</script>
